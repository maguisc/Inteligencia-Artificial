import numpy as np
import matplotlib.pyplot as plt 

#Primer paso: defino los límites de la cinta transportadora 

limite_x_min, limite_x_max = -10, 10
limite_y_min, limite_y_max = -10, 10

#Segundo paso: defino la función que verifica si una posición está dentro de los límites de la cinta transportadora

def posicion_valida(x, y):
    return limite_x_min <= x <= limite_x_max and limite_y_min <= y <= limite_y_max

#Tercer paso: defino la función para simular el montaje de los bloques del motor

def simular_montaje(posicion_correcta):
    desplazamiento_x = np.random.uniform(-0.5, 0.5)
    desplazamiento_y = np.random.uniform(-0.5, 0.5)
    posicion_x = posicion_correcta[0] + desplazamiento_x
    posicion_y = posicion_correcta[1] + desplazamiento_y
    return posicion_x, posicion_y

#Cuarto paso: definir la función de la búsqueda exhaustiva

def busqueda_exhaustiva(posicion_correcta):
    mejor_posicion = None
    menor_distancia = float('inf')

    for x in range(limite_x_min, limite_x_max + 1):
        for y in range(limite_y_min, limite_y_max + 1):
            if posicion_valida(x, y):
                posicion_actual = (x,y)
                posicion_simulada = simular_montaje(posicion_actual)
                distancia = np.linalg.norm(np.array(posicion_simulada) - np.array(posicion_correcta))
                if distancia < menor_distancia:
                    menor_distancia = distancia 
                    mejor_posicion = posicion_actual
    return mejor_posicion

#Quinto paso: Posición correcta del bloque de motor en la cinta

posicion_correcta = (0,1)

#Sexto paso: Realizo la busqueda exhaustiva
posicion_encontrada = busqueda_exhaustiva(posicion_correcta)

#Séptimo paso: Realizo la visualización de la búsqueda

def visualizar_busqueda(posicion_correcta, mejor_posicion):
    plt.figure(figsize=(8, 8))
    plt.plot(*posicion_correcta, 'bo', label='Posición correcta')  
    if mejor_posicion:
        plt.plot(*mejor_posicion, 'ro', label='Mejor posición encontrada') 
    plt.xlim(limite_x_min - 1, limite_x_max + 1)
    plt.ylim(limite_y_min - 1, limite_y_max + 1)
    plt.xlabel('Posición x')
    plt.ylabel('Posición y')
    plt.title('Búsqueda Exhaustiva de la Posición Correcta del Motor')
    plt.grid(True)
    plt.legend()
    plt.gca().set_aspect('equal', adjustable='box')
    plt.show()

#Octavo paso: Si se encuentra una posicion, se imprime y se visualiza la búsqueda

if posicion_encontrada:
    print("La posición encontrada del bloque de motor es: {posicion_encontrada}" )
    visualizar_busqueda(posicion_correcta, posicion_encontrada)
else:
    print("No se encontró la posición correcta del bloque de motor")
